type User {
  firstName: String!
  lastName: String!
  email: String!
  phone:String!
}

type Reservation {
  reservationId: String!
  userId: String!
  status: String!
  tableSize: Int!
  arrivalDate: String!
  arrivalSlot: String!
  createdAt: String
  updatedAt: String
  cancelledAt: String
  cancelledBy: String
  completedAt: String
  completedBy: String
}

type Query {
  User(email: String): User
}

type AddUserMutationResponse{
  success: Boolean!
  message: String
}

type ReservationMutationResponse{
  success: Boolean!
  message: String
}

input ReservationUpdatedInput{
  tableSize: Int
  arrivalDate: String
  arrivalSlot: String
}

type Mutation {
  addUser(email: String!, firstName: String!, lastName:String!, phone: String!): AddUserMutationResponse

  makeReservation(userId: String!, tableSize: Int!, arrivalDate: String!, arrivalSlot: String!): ReservationMutationResponse

  cancelReservation(reservationId: String!): ReservationMutationResponse

  updateReservation(reservationId: String!, userId: String!, updatedReservation: ReservationUpdatedInput): ReservationMutationResponse

  completeReservation(reservationId: String!): ReservationMutationResponse
}
